#include <Wire.h>
#include <LCD_I2C.h>

const int trigPin = 12; // Trigger Pin of Ultrasonic Sensor
const int echoPin = 13; // Echo Pin of Ultrasonic Sensor
const int motorPin1 = 15;  // Motor Pin 1
const int motorPin2 = 16;  // Motor Pin 2
const int enablePin = 23;  // Motor Enable Pin

LCD_I2C lcd(0x27, 16, 2);
int pwm = 255;

void setup() {
   Serial.begin(9600); // เริ่มต้น Serial Terminal
   pinMode(trigPin, OUTPUT);
   pinMode(echoPin, INPUT);
   pinMode(motorPin1, OUTPUT);
   pinMode(motorPin2, OUTPUT);
   pinMode(enablePin, OUTPUT);
   digitalWrite(trigPin, LOW); // ตั้งค่าเริ่มต้นสำหรับเซ็นเซอร์อัลตราโซนิค
   stopMotor(); // หยุดมอเตอร์ในเริ่มต้น
   Wire.begin(); // เริ่มต้น I2C
   lcd.begin();
}

void loop() {
   long duration, inches, cm;
   digitalWrite(trigPin, HIGH); // ส่งสัญญาณอัลตราโซนิค
   delayMicroseconds(10);
   digitalWrite(trigPin, LOW);
   duration = pulseIn(echoPin, HIGH); // วัดระยะเวลาของสัญญาณกลับ
   inches = microsecondsToInches(duration);
   cm = microsecondsToCentimeters(duration);
   Serial.print("Distance: ");
   Serial.print(cm);
   Serial.println(" cm");

   delay(100); // หน่วงเวลาเพื่อความเสถียร

   // ควบคุมมอเตอร์โดยอิงจากค่าระยะทาง
  if (cm <= 20 ) {
      pwm = 100;
      forward();
       //reverse(); // ถอยหลังมอเตอร์หากมีอุปสัยใกล้เข้ามา
   } else if (cm > 20 && cm < 25) {
       stopMotor(); // หยุดมอเตอร์หากมีอุปสัยหน้าตัวเกินไป
   } else {
      pwm = 255;
      forward(); // ถอยหลังมอเตอร์หากมีอุปสัยใกล้เข้ามา
   }
  
  // แสดงข้อความบนจอ LCD
  displayMessage("Distance: " + String(cm) + " cm", 0);

}

long microsecondsToInches(long microseconds) {
   return microseconds / 74 / 2;
}

long microsecondsToCentimeters(long microseconds) {
   return microseconds / 29 / 2;
}

//Motor
void forward() {
  digitalWrite(motorPin1, HIGH);
  digitalWrite(motorPin2, LOW);
  analogWrite(enablePin, pwm);  // เปิดมอเตอร์
}

void reverse() {
  digitalWrite(motorPin1, LOW);
  digitalWrite(motorPin2, HIGH);
 analogWrite(enablePin, pwm);  // เปิดมอเตอร์
}

void stopMotor() {
  analogWrite(enablePin, 0);  // ปิดมอเตอร์
}


//I2C
void displayMessage(String message, int line) {
  lcd.setCursor(0, line); // ตั้งค่าตำแหน่งแถว
  lcd.print(message); // แสดงข้อความ
}
